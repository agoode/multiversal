
# ####

- not-for: executor
  function:
    name: FlushEvents
    args:
      - name: evmask
        type: INTEGER
      - name: stopmask
        type: INTEGER
    trap: 0xA032
    m68k-inline: [0x201F, 0xA032]

# ####

- not-for: executor
  function:
    name: GetOSEvent
    return: Boolean
    args:
      - name: evmask
        type: INTEGER
        register: D0
      - name: eventp
        type: EventRecord*
        register: A0
    trap: 0xA031
    m68k-inline: [0xA031, 0x5240]
    returnreg: D0

# ####

- not-for: executor
  function:
    name: OSEventAvail
    return: Boolean
    args:
      - name: evmask
        type: INTEGER
        register: D0
      - name: eventp
        type: EventRecord*
        register: A0
    trap: 0xA030
    m68k-inline: [0xA030, 0x5240]
    returnreg: D0


- only-for: executor
  function:
    name: FlushEvents
    args:
      - name: evmask
        type: INTEGER
        register: D0LowWord
      - name: stopmask
        type: INTEGER
        register: D0HighWord
    trap: 0xA032
    executor_extras: ClearD0
    executor: true

- only-for: executor
  function:
    name: GetOSEvent
    return: Boolean
    args:
      - name: evmask
        type: INTEGER
        register: D0
      - name: eventp
        type: EventRecord*
        register: A0
    trap: 0xA031
    returnreg: D0Minus1Boolean
    executor: true

# ####

- only-for: executor
  function:
    name: OSEventAvail
    return: Boolean
    args:
      - name: evmask
        type: INTEGER
        register: D0
      - name: eventp
        type: EventRecord*
        register: A0
    trap: 0xA030
    returnreg: D0Minus1Boolean
    executor: true